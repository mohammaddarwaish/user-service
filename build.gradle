buildscript {
	ext {
		springBootVersion = '2.0.0.BUILD-SNAPSHOT'
		swaggerVersion = '2.7.0'
		assertjVersion = '3.9.0'
		orikaVersion = '1.5.2'
	}
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'findbugs'

group = 'com.github'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.liquibase:liquibase-core')
	//compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile("io.springfox:springfox-swagger2:${swaggerVersion}")
	compile("io.springfox:springfox-swagger-ui:${swaggerVersion}")
	compile ("ma.glasnost.orika:orika-core:${orikaVersion}")
	runtime('org.springframework.boot:spring-boot-devtools')
	runtime('com.h2database:h2')
	runtime('mysql:mysql-connector-java')
	compile('org.projectlombok:lombok')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.security:spring-security-test')
	testCompile("org.assertj:assertj-core:${assertjVersion}")
	testCompile("org.apache.httpcomponents:httpclient")
}

mainClassName = 'com.github.userservice.UserServiceApplication'

tasks.withType(FindBugs) {
	reports {
		xml.enabled false
		html.enabled true
	}
	ignoreFailures = false
	effort = "max"
	reportLevel = "medium"
	excludeFilter = file("$rootProject.projectDir/config/findbugs/excludeFilter.xml")
}
